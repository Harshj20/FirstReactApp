{"version":3,"sources":["components/Navbar.js","components/TextArea.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","about","role","onClick","tog","htmlFor","TextArea","useState","text","setText","copy","setCopy","style","color","heading","backgroundColor","value","onChange","event","target","rows","disabled","length","preventDefault","newText","toUpperCase","document","getElementById","select","execCommand","getSelection","removeAllRanges","split","filter","element","Math","floor","toFixed","defaultProps","Alert","height","alert","word","lower","toLowerCase","charAt","slice","capitalise","msg","About","fontSize","propsTypes","PropTypes","object","App","setMode","setAlert","showAlert","message","setTimeout","body","background","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d899cdf0.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\">\r\n            <div className=\"form-check form-switch\">\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.tog}/>\r\n  <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n</div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n        \r\n    )\r\n}\r\n\r\nNavbar.propTypes={\r\n    title: PropTypes.string,\r\n    about: PropTypes.string\r\n}\r\nNavbar.defaultProps={\r\n    title:'SetTitle',\r\n    about:'About'\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextArea(props) {\r\n    const [text, setText] = useState('');\r\n    const [copy, setCopy] = useState(\"Copy text\");\r\n    const changeToUppercase = (event)=>{\r\n        event.preventDefault();\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const onChangeHandler = (event)=>{\r\n        setText(event.target.value);\r\n        setCopy(\"Copy text\");\r\n    }\r\n    const changetolo =(event)=>{\r\n        event.preventDefault();\r\n        setText('');\r\n    }\r\n    const copytext = (event)=>{\r\n        event.preventDefault();\r\n        let copy = document.getElementById(\"textarea\");\r\n        copy.select();\r\n        document.execCommand('copy');\r\n        document.getSelection().removeAllRanges();\r\n        setCopy(\"Copied\");\r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n        <div className = \"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <form>\r\n        <div className=\"form-group my-3\">\r\n            <h1>{props.heading}</h1>\r\n          <textarea className=\"form-control \" style={{backgroundColor: props.mode==='dark'?'#939393':'white', color: props.mode==='dark'?'white':'black'}}id=\"textarea\" value={text} onChange={onChangeHandler} rows=\"6\"></textarea>\r\n        </div>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary my-2\" onClick={changeToUppercase} >Change to upperCase</button>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary mx-2 my-2\" onClick={changetolo}>Clear Text</button>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary my-2\" onClick={copytext}>{copy}</button>    \r\n      </form>\r\n      </div> \r\n      <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h3>Your text Summary</h3>\r\n        <p>{text.split(\" \").filter((element) => { return element.length !== 0;}).length} words {text.length} characters</p>\r\n        <p>{Math.floor(0.48*text.split(\" \").length/60)}:{(0.48*text.split(\" \").length%60).toFixed(2)} time to read</p>\r\n      </div>\r\n</>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Alert(props) {\r\n    const capitalise=(word)=>{\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n\r\n    return (      <div style={{height: 5}}>\r\n        {props.alert &&\r\n      \r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n     <strong>{capitalise(props.alert.type)}</strong>: {props.alert.msg}\r\n      </div>}\r\n      </div>\r\n    )\r\n}\r\n\r\nAlert.propsTypes ={\r\n    alert : PropTypes.object\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    return (\r\n        <div className=\"container text-center my-5\" style={{color : props.mode === 'light'?'black':'white'}}>\r\n            <p style={{fontSize:\"4rem\"}}>About us</p>\r\n            <p>This part is currently empty</p>\r\n            <p>This part was made to show the use of router in react by which we can switch pages without loading the whole page</p>\r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport React, {useState} from 'react';\nimport Navbar from './components/Navbar.js';\nimport TextArea from './components/TextArea.js';\nimport Alert from './components/Alert.js';\nimport About from './components/About.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const toggle=(event)=>{\n\n    if(mode === 'light')\n    {\n    setMode('dark');\n    document.body.style.background = 'rgb(43 47 51)';\n    // document.getElementById(\"aboutUs\").style.color = 'white';\n    showAlert(\"Dark mode enabled\", \"success\");\n    }\n    else\n    {\n    setMode('light');\n    document.body.style.background = '#fff';\n    // document.getElementById(\"aboutUs\").style.color = 'black';\n    showAlert(\"Dark mode disabled\", \"success\");\n    }\n  }\n\n  const showAlert=(message, type)=>{\n    setAlert({\n      msg: message,\n      type:type\n    });\n    setTimeout(() => {\n        setAlert(null)}, 1000\n      )\n}\n\n  return (\n    <>\n    <Router>\n    <Navbar mode={mode} title=\"TextUtils\" tog={toggle}/>\n      <Alert alert={alert}/>\n      <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode}/>\n            </Route>\n          <Route exact path=\"/\">\n          <TextArea heading=\"Enter your Text\" mode={mode} />\n          </Route>\n        </Switch>\n        \n        </Router>\n        \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}